{"version":3,"sources":["infoBox.js","util.js","map.js","Table.js","App.js","index.js"],"names":["infoBox","title","cases","isRed","active","total","props","Card","onClick","className","CardContent","Typography","color","casesTypeColors","hex","multiplier","recovered","deaths","sortData","data","sort","a","b","prettyPrintStat","stat","numeral","format","showDataOnMap","casesType","map","country","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","radius","Math","sqrt","Popup","style","backgroundImage","flag","Map","countries","zoom","TileLayer","url","attribution","Table","App","useState","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","useEffect","fetch","then","response","json","name","value","iso2","sortedData","getCountriesData","onCountryChange","event","countryCode","target","console","log","FormControl","Select","variant","onChange","MenuItem","e","todayCases","todayRecovered","todayDeaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03e9f970.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./App.css\";\r\nimport { Card, CardContent, Typography } from '@material-ui/core'\r\n\r\n\r\n\r\nfunction infoBox({title , cases , isRed , active , total , ...props }) {\r\n    return (\r\n        <Card onClick={props.onClick} className={`infoBox ${active && 'infoBox--selected'} ${isRed && 'infoBox--red'}`}>\r\n            <CardContent>\r\n                <Typography className=\"infoBox__title\" color=\"textSecondary\">{title}</Typography>\r\n                <h2 className=\"infoBox__cases\">{cases}</h2>\r\n\r\n                <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n                    {total}Total\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default infoBox\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n      hex: \"#CC1034\",\r\n      multiplier: 800,\r\n    },\r\n    recovered: {\r\n      hex: \"green\",\r\n      multiplier: 1200,\r\n    },\r\n    deaths: {\r\n      hex: \"#fb4443\",\r\n      multiplier: 2000,\r\n    },\r\n  };\r\n\r\n\r\nexport const sortData = (data) => {\r\n    const sortedData = [...data];\r\n    \r\n\r\n    return sortedData.sort((a,b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\n\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>(\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  )));","import React from \"react\";\r\nimport \"./map.css\";\r\nimport { MapContainer as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\n\r\nfunction Map({countries,casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries , casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport './Table.css';\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({countries}) {\r\n    return <div className=\"table\">\r\n           {countries.map(({country , cases}) => {\r\n               return<tr>\r\n                 <td>{country}</td>\r\n                 {/* <td><strong>{cases}</strong></td> */}\r\n                 <strong>{numeral(cases).format(\"0,0\")}</strong>\r\n             </tr>\r\n           })} \r\n        </div>;\r\n}\r\n\r\nexport default Table;\r\n","// https://github.com/mathdroid/covid19\n//https://disease.sh/c3/covid-19/countries\n\n\nimport { Card, CardContent, MenuItem, Select } from '@material-ui/core'\nimport FormControl from '@material-ui/core/FormControl';\nimport React, { useEffect, useState } from 'react'\nimport \"./App.css\"\nimport InfoBox from './infoBox';\nimport Map from './map';\nimport Table from './Table';\nimport { sortData ,prettyPrintStat } from './util';\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries , setCountries]=useState([]);\n  const [country , setCountry]=useState(\"worldwide\");\n  const [countryInfo , setCountryInfo] =useState({});\n  const [tableData , setTableData] = useState([]);\n  const [mapCenter,setMapCenter] = useState({ lat:34.80746 , lng:-40.4796});\n  const [mapZoom , setMapZoom] = useState(3);\n  const [mapCountries , setMapCountries] =useState([]);\n  const [casesType , setCasesType] = useState(\"cases\");\n\n  useEffect(()=>{\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data);\n    })\n  },[])\n\n\n  useEffect(()=>{\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data)=>{\n          const countries = data.map((country)=>({\n              name:country.country,\n              value:country.countryInfo.iso2\n            }));\n\n            const sortedData = sortData(data);\n            setTableData(sortedData);\n            setMapCountries(data);\n            setCountries(countries);\n      });\n    };\n    getCountriesData();\n  },[]); //whenever it see any change in variable countries (State) it will automatically fetch it\n\n  const onCountryChange =async (event) =>{\n    const countryCode = event.target.value;\n    \n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\":`https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n \n      \n      setMapZoom(4);\n    })\n  };\n  console.log(countryInfo);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n    <div className=\"app__header\">\n     <h1>COVID-19 Tracker</h1>\n     <FormControl>\n       <Select variant=\"outlined\"  value={country} onChange={onCountryChange}>\n       <MenuItem value=\"worldwide\">WorldWide</MenuItem>\n         {countries.map((country)=>{\n           return(\n           <MenuItem value={country.value}>{country.name}</MenuItem>\n           )\n         })}\n          \n       </Select>\n       </FormControl>\n       </div>\n\n       <div className=\"app__stats\">\n         <InfoBox isRed active={casesType === \"cases\"} onClick={e => setCasesType('cases')} total={countryInfo.cases} cases={prettyPrintStat(countryInfo.todayCases)} title=\"Coronavirus cases\"/>\n         <InfoBox active={casesType === \"recovered\"} onClick={e => setCasesType('recovered')} total={countryInfo.recovered} cases={prettyPrintStat(countryInfo.todayRecovered)} title=\"Recoverd\"/>\n         <InfoBox isRed active={casesType === \"deaths\"} onClick={e => setCasesType('deaths')} total={countryInfo.deaths} cases={prettyPrintStat(countryInfo.todayDeaths)} title=\"Deaths\"/>\n       </div>\n       <Map \n       casesType={casesType}\n       countries={mapCountries}\n       center={mapCenter}\n       zoom={mapZoom}/>\n       </div>\n      <Card className=\"app__right\">\n         <CardContent>\n           <h3>Live cases by country</h3>\n            <Table countries={tableData} />\n           \n            {/* <LineGraph ountries={tableData} />  */}\n         </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}